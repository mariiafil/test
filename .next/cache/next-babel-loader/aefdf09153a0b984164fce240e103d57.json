{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { store, nextConnect, fetchPostsWithId } from '../../redux/store';\n\nvar Post = function Post(props) {\n  console.log(props);\n  return;\n\n  __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n};\n\nPost.getInitialProps = function _callee(context) {\n  var res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 2:\n          res = _context.sent;\n          post = res.data;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  })\n};\nexport default nextConnect(function (state) {\n  return state;\n})(Post);","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","PropTypes","Layout","axios","store","nextConnect","fetchPostsWithId","Post","props","console","log","getInitialProps","context","get","id","res","post","data","propTypes","shape","title","string","isRequired","body","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,gBAA5B,QAAmD,mBAAnD;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;AAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CATD;;AAWAD,IAAI,CAACI,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKHT,KAAK,CAACU,GAAN,kDAAoDC,EAApD,EALG;;AAAA;AAKfC,UAAAA,GALe;AAMfC,UAAAA,IANe,GAMRD,GAAG,CAACE,IANI;AAAA,2CAQd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWAT,IAAI,CAACW,SAAL,GAAiB;AACfF,EAAAA,IAAI,EAAEf,SAAS,CAACkB,KAAV,CAAgB;AACpBC,IAAAA,KAAK,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UADJ;AAEpBC,IAAAA,IAAI,EAAEtB,SAAS,CAACoB,MAAV,CAAiBC;AAFH,GAAhB;AADS,CAAjB;AAOA,eAAejB,WAAW,CAAC,UAACmB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BjB,IAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\nimport {store, nextConnect, fetchPostsWithId} from '../../redux/store';\r\n\r\nconst Post = props => {\r\n  console.log(props);\r\n  return\r\n  (\r\n    <Layout>\r\n      {/* <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  // console.log(store);\r\n  // const { id } = context.query;\r\n  // await store().dispatch(fetchPostsWithId(id));\r\n  // return {title: 'ss', body: 'dd'};\r\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const post = res.data;\r\n\r\n  return { post };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default nextConnect((state) => state)(Post)\r\n"]},"metadata":{},"sourceType":"module"}