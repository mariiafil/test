{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, comment.body);\n  })));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, getPost, getComments, post, currentComments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 3:\n          getPost = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          getComments = _context.sent;\n          post = getPost.data;\n          currentComments = getComments.data.filter(function (comment) {\n            return comment.postId === id;\n          });\n          return _context.abrupt(\"return\", {\n            post: post,\n            comments: currentComments\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","PropTypes","Layout","axios","Post","props","post","title","body","comments","map","comment","id","getInitialProps","context","query","get","getPost","getComments","data","currentComments","filter","postId","propTypes","shape","string","isRequired","arrayOf","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,IAAf,CAFF,EAGGH,KAAK,CAACI,QAAN,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACH,IADX,CADyB;AAAA,GAA1B,CADH,CAJJ,CADgB;AAAA,CAAlB;;AAcAJ,IAAI,CAACS,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbF,UAAAA,EADa,GACNE,OAAO,CAACC,KADF,CACbH,EADa;AAAA;AAAA,2CAECT,KAAK,CAACa,GAAN,kDAAoDJ,EAApD,EAFD;;AAAA;AAEfK,UAAAA,OAFe;AAAA;AAAA,2CAGKd,KAAK,CAACa,GAAN,CAAU,2CAAV,CAHL;;AAAA;AAGfE,UAAAA,WAHe;AAIfZ,UAAAA,IAJe,GAIRW,OAAO,CAACE,IAJA;AAKfC,UAAAA,eALe,GAKGF,WAAW,CAACC,IAAZ,CAAiBE,MAAjB,CAAwB,UAAAV,OAAO;AAAA,mBAAIA,OAAO,CAACW,MAAR,KAAmBV,EAAvB;AAAA,WAA/B,CALH;AAAA,2CAOd;AAAEN,YAAAA,IAAI,EAAJA,IAAF;AAAQG,YAAAA,QAAQ,EAAEW;AAAlB,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUAhB,IAAI,CAACmB,SAAL,GAAiB;AACfjB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,KAAV,CAAgB;AACpBjB,IAAAA,KAAK,EAAEN,SAAS,CAACwB,MAAV,CAAiBC,UADJ;AAEpBlB,IAAAA,IAAI,EAAEP,SAAS,CAACwB,MAAV,CAAiBC;AAFH,GAAhB,CADS;AAKfjB,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,OAAV,CACR1B,SAAS,CAACuB,KAAV,CAAgB;AACdZ,IAAAA,EAAE,EAAEX,SAAS,CAAC2B,MADA;AAEdpB,IAAAA,IAAI,EAAEP,SAAS,CAACwB;AAFF,GAAhB,CADQ,EAINC;AATW,CAAjB;AAYA,eAAetB,IAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => (\r\n  <Layout>\r\n    <h1>{props.post.title}</h1>\r\n    <p>{props.post.body}</p>\r\n    {props.comments && (\r\n      <ul>\r\n        {props.comments.map(comment => \r\n          <li key={comment.id}>\r\n            {comment.body}\r\n          </li>)}\r\n      </ul>)}\r\n  </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  const post = getPost.data;\r\n  const currentComments = getComments.data.filter(comment => comment.postId === id);\r\n\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}