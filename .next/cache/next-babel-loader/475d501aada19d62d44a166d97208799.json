{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  console.log(props);\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              body: value,\n              postId: props.post.id\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n          case 5:\n            setValue('');\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, comment.body);\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, getPost, getComments, post, currentComments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 3:\n          getPost = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          getComments = _context2.sent;\n          post = getPost.data;\n          console.log(getComments.data);\n          currentComments = getComments.data.filter(function (comment) {\n            return comment.postId === Number(id);\n          });\n          return _context2.abrupt(\"return\", {\n            post: post,\n            comments: currentComments\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    postId: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","PropTypes","Layout","axios","Post","props","value","setValue","console","log","handleChange","e","target","handleSubmit","preventDefault","post","body","postId","id","get","title","comments","map","comment","getInitialProps","context","query","getPost","getComments","data","currentComments","filter","Number","propTypes","shape","number","isRequired","string","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n  console.log(props);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments',\r\n      { body: value, postId: props.post.id });\r\n    await axios.get('https://simple-blog-api.crew.red/comments');\r\n    setValue('');\r\n  }\r\n  return (\r\n    <Layout>\r\n      <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p>\r\n      {props.comments && (\r\n        <ul>\r\n          {props.comments.map(comment => \r\n            <li key={comment.id}>\r\n              {comment.body}\r\n            </li>)}\r\n        </ul>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <button type=\"submit\">Add comment</button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = getPost.data;\r\n  console.log(getComments.data);\r\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      postId: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}