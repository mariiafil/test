{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\" \\n  margin-left: 2em;\\n  padding: 2em 3em;\\n  width: 80%; \\n  font-size: 18px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\" \\n  margin-left: 2em;\\n  padding: 2em 3em;\\n  width: 80%; \\n  font-size: 18px;\\n  background-color: #eee;\\n  border-radius: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\" \\n  width: 50%; \\n  padding: 1em 1.5em; \\n  margin: 0.4em;\\n  background-color: #F8E0EC;\\n  list-style: none;\\n  border-radius: 7px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"  \\n  margin: 0 1em;\\n  padding: 1.5em;\\n  font-weight: bold;\\n  font-size: 30px;  \\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 300px;\\n  height: 40px;\\n  padding: 0 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  height: 60px;\\n  font-size: 18px;\\n  background: transparent;\\n  border-radius: 3px;\\n  border: 2px solid palevioletred;\\n  color: palevioletred;\\n  margin: 0 1em;\\n  padding: 0.25em 1em;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components';\nvar Button = styled.button(_templateObject());\nvar Input = styled.input(_templateObject2());\nvar PostsHeader = styled.h2(_templateObject3());\nvar ListItem = styled.li(_templateObject4());\nvar BodyContent = styled.div(_templateObject5());\nvar CommentsHeader = styled.div(_templateObject6());\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              body: value,\n              postId: props.post.id\n            }));\n\n          case 3:\n            setValue('');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.post.title), __jsx(BodyContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(React.Fragment, null, __jsx(CommentsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Comments:\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.comments.map(function (comment) {\n    return __jsx(ListItem, {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, comment.body);\n  }))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, getPost, getComments, post, currentComments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 3:\n          getPost = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          getComments = _context2.sent;\n          post = getPost.data;\n          currentComments = getComments.data.filter(function (comment) {\n            return comment.postId === Number(id);\n          });\n          return _context2.abrupt(\"return\", {\n            post: post,\n            comments: currentComments\n          });\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    postId: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","useEffect","PropTypes","Layout","axios","styled","Button","button","Input","input","PostsHeader","h2","ListItem","li","BodyContent","div","CommentsHeader","Post","props","value","setValue","handleChange","e","target","handleSubmit","preventDefault","post","body","postId","id","title","comments","map","comment","getInitialProps","context","query","get","getPost","getComments","data","currentComments","filter","Number","propTypes","shape","number","isRequired","string","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  height: 60px;\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid palevioletred;\r\n  color: palevioletred;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 300px;\r\n  height: 40px;\r\n  padding: 0 10px;\r\n`\r\n\r\nconst PostsHeader = styled.h2`  \r\n  margin: 0 1em;\r\n  padding: 1.5em;\r\n  font-weight: bold;\r\n  font-size: 30px;  \r\n`;\r\n\r\nconst ListItem = styled.li` \r\n  width: 50%; \r\n  padding: 1em 1.5em; \r\n  margin: 0.4em;\r\n  background-color: #F8E0EC;\r\n  list-style: none;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst BodyContent = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  background-color: #eee;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst CommentsHeader = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments',\r\n      { body: value, postId: props.post.id });\r\n    setValue('');\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PostsHeader>{props.post.title}</PostsHeader>\r\n      <BodyContent>{props.post.body}</BodyContent>\r\n      {props.comments && (\r\n        <>\r\n          <CommentsHeader>Comments:</CommentsHeader>\r\n          <ul>\r\n            {props.comments.map(comment => \r\n              <ListItem key={comment.id}>\r\n                {comment.body}\r\n              </ListItem>)}\r\n          </ul>\r\n        </>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <Input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <Button type=\"submit\">Add comment</Button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = getPost.data;\r\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      postId: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}