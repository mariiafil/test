{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: comment,\n    1: setComments\n  } = useState([props.comments]);\n  console.log(props);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('https://simple-blog-api.crew.red/comments', {\n      body: value,\n      postId: props.post.id\n    });\n    setValue('');\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, comment.body))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\n  const post = getPost.data;\n  console.log(getComments.data);\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\n  return {\n    post,\n    comments: currentComments\n  };\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","PropTypes","Layout","axios","Post","props","value","setValue","comment","setComments","comments","console","log","handleChange","e","target","handleSubmit","preventDefault","post","body","postId","id","title","map","getInitialProps","context","query","getPost","get","getComments","data","currentComments","filter","Number","propTypes","shape","number","isRequired","string","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n  const [comment, setComments] = useState([props.comments]);\r\n  console.log(props);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments',\r\n      { body: value, postId: props.post.id });\r\n    setValue('');\r\n  }\r\n  return (\r\n    <Layout>\r\n      <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p>\r\n      {props.comments && (\r\n        <ul>\r\n          {comments.map(comment => \r\n            <li key={comment.id}>\r\n              {comment.body}\r\n            </li>)}\r\n        </ul>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <button type=\"submit\">Add comment</button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = getPost.data;\r\n  console.log(getComments.data);\r\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}