{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, comment.body))), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\n  const post = getPost.data;\n  const currentComments = getComments.data.filter(comment => comment.postId === id);\n  return {\n    post,\n    comments: currentComments\n  };\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","PropTypes","Layout","axios","Post","props","value","setValue","post","title","body","comments","map","comment","id","getInitialProps","context","query","getPost","get","getComments","data","currentComments","filter","postId","propTypes","shape","string","isRequired","arrayOf","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,KAAK,CAACG,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACG,IAAN,CAAWE,IAAf,CAFF,EAGGL,KAAK,CAACM,QAAN,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACzB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACH,IADX,CADD,CADH,CAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVJ,CADF;AAkBD,CApBD;;AAsBAN,IAAI,CAACW,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEF,IAAAA;AAAF,MAASE,OAAO,CAACC,KAAvB;AACA,QAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,0CAAyCL,EAAG,EAAvD,CAAtB;AACA,QAAMM,WAAW,GAAG,MAAMjB,KAAK,CAACgB,GAAN,CAAU,2CAAV,CAA1B;AACA,QAAMX,IAAI,GAAGU,OAAO,CAACG,IAArB;AACA,QAAMC,eAAe,GAAGF,WAAW,CAACC,IAAZ,CAAiBE,MAAjB,CAAwBV,OAAO,IAAIA,OAAO,CAACW,MAAR,KAAmBV,EAAtD,CAAxB;AAEA,SAAO;AAAEN,IAAAA,IAAF;AAAQG,IAAAA,QAAQ,EAAEW;AAAlB,GAAP;AACD,CARD;;AAUAlB,IAAI,CAACqB,SAAL,GAAiB;AACfjB,EAAAA,IAAI,EAAEP,SAAS,CAACyB,KAAV,CAAgB;AACpBjB,IAAAA,KAAK,EAAER,SAAS,CAAC0B,MAAV,CAAiBC,UADJ;AAEpBlB,IAAAA,IAAI,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AAFH,GAAhB,CADS;AAKfjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,OAAV,CACR5B,SAAS,CAACyB,KAAV,CAAgB;AACdZ,IAAAA,EAAE,EAAEb,SAAS,CAAC6B,MADA;AAEdpB,IAAAA,IAAI,EAAET,SAAS,CAAC0B;AAFF,GAAhB,CADQ,EAINC;AATW,CAAjB;AAYA,eAAexB,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n  return (\r\n    <Layout>\r\n      <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p>\r\n      {props.comments && (\r\n        <ul>\r\n          {props.comments.map(comment => \r\n            <li key={comment.id}>\r\n              {comment.body}\r\n            </li>)}\r\n        </ul>)}\r\n        <form>\r\n          <label>\r\n            <input type=\"text\" placeholder='comment'  />\r\n          </label>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  const post = getPost.data;\r\n  const currentComments = getComments.data.filter(comment => comment.postId === id);\r\n\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}