{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components';\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  cursor: pointer;\n`;\nconst PostsHeader = styled.h2`  \n  margin: 0 1em;\n  padding: 1.5em;\n  font-weight: bold;\n  font-size: 30px;  \n`;\nconst ListItem = styled.li` \n  width: 50%; \n  padding: 1em 1.5em; \n  margin: 0.4em;\n  background-color: #F8E0EC;\n  list-style: none;\n  border-radius: 7px;\n`;\nconst BodyContent = styled.div` \n  margin-left: 2em;\n  padding: 2em 3em;\n  width: 80%; \n  font-size: 18px;\n  background-color: #eee;\n  border-radius: 10px;\n`;\nconst CommentsHeader = styled.div` \n  margin-left: 2em;\n  padding: 2em 3em;\n  width: 80%; \n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst Post = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('https://simple-blog-api.crew.red/comments', {\n      body: value,\n      postId: props.post.id\n    });\n    setValue('');\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.post.title), __jsx(BodyContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(React.Fragment, null, __jsx(CommentsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Comments:\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.comments.map(comment => {\n    comment.body.trim().length > 0 ? __jsx(ListItem, {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, comment.body) : '';\n  }))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\n  const post = getPost.data;\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\n  return {\n    post,\n    comments: currentComments\n  };\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    postId: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","useEffect","PropTypes","Layout","axios","styled","Button","button","PostsHeader","h2","ListItem","li","BodyContent","div","CommentsHeader","Post","props","value","setValue","handleChange","e","target","handleSubmit","preventDefault","post","body","postId","id","title","comments","map","comment","trim","length","getInitialProps","context","query","getPost","get","getComments","data","currentComments","filter","Number","propTypes","shape","number","isRequired","string","arrayOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;;;;;;;;CAA7B;AAUA,MAAMC,WAAW,GAAGH,MAAM,CAACI,EAAG;;;;;CAA9B;AAOA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAG;;;;;;;CAA3B;AASA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,GAAI;;;;;;;CAA/B;AASA,MAAMC,cAAc,GAAGT,MAAM,CAACQ,GAAI;;;;;;CAAlC;;AAQA,MAAME,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMmB,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAOF,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACG,cAAF;AACA,UAAMnB,KAAK,CAACoB,IAAN,CAAW,2CAAX,EACJ;AAAEC,MAAAA,IAAI,EAAER,KAAR;AAAeS,MAAAA,MAAM,EAAEV,KAAK,CAACQ,IAAN,CAAWG;AAAlC,KADI,CAAN;AAEAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcF,KAAK,CAACQ,IAAN,CAAWI,KAAzB,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcZ,KAAK,CAACQ,IAAN,CAAWC,IAAzB,CAFF,EAGGT,KAAK,CAACa,QAAN,IACC,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACzB;AAACA,IAAAA,OAAO,CAACN,IAAR,CAAaO,IAAb,GAAoBC,MAApB,GAA6B,CAA7B,GAAkC,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEF,OAAO,CAACJ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAChCI,OAAO,CAACN,IADwB,CAAlC,GAEc,EAFd;AAEiB,GAHnB,CADH,CAFF,CAJJ,EAcI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,WAAW,EAAC,SADpB;AAEQ,IAAA,KAAK,EAAEL,KAFf;AAGQ,IAAA,QAAQ,EAAEE,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CAdJ,CADF;AAwBD,CAtCD;;AAwCAJ,IAAI,CAACmB,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAER,IAAAA;AAAF,MAASQ,OAAO,CAACC,KAAvB;AACA,QAAMC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,GAAN,CAAW,0CAAyCX,EAAG,EAAvD,CAAtB;AACA,QAAMY,WAAW,GAAG,MAAMnC,KAAK,CAACkC,GAAN,CAAU,2CAAV,CAA1B;AAEA,QAAMd,IAAI,GAAGa,OAAO,CAACG,IAArB;AACA,QAAMC,eAAe,GAAGF,WAAW,CAACC,IAAZ,CAAiBE,MAAjB,CAAwBX,OAAO,IAAIA,OAAO,CAACL,MAAR,KAAmBiB,MAAM,CAAChB,EAAD,CAA5D,CAAxB;AACA,SAAO;AAAEH,IAAAA,IAAF;AAAQK,IAAAA,QAAQ,EAAEY;AAAlB,GAAP;AACD,CARD;;AAUA1B,IAAI,CAAC6B,SAAL,GAAiB;AACfpB,EAAAA,IAAI,EAAEtB,SAAS,CAAC2C,KAAV,CAAgB;AACpBlB,IAAAA,EAAE,EAAEzB,SAAS,CAAC4C,MAAV,CAAiBC,UADD;AAEpBnB,IAAAA,KAAK,EAAE1B,SAAS,CAAC8C,MAAV,CAAiBD,UAFJ;AAGpBtB,IAAAA,IAAI,EAAEvB,SAAS,CAAC8C,MAAV,CAAiBD;AAHH,GAAhB,CADS;AAMflB,EAAAA,QAAQ,EAAE3B,SAAS,CAAC+C,OAAV,CACR/C,SAAS,CAAC2C,KAAV,CAAgB;AACdlB,IAAAA,EAAE,EAAEzB,SAAS,CAAC4C,MADA;AAEdpB,IAAAA,MAAM,EAAExB,SAAS,CAAC4C,MAFJ;AAGdrB,IAAAA,IAAI,EAAEvB,SAAS,CAAC8C;AAHF,GAAhB,CADQ,EAKND;AAXW,CAAjB;AAcA,eAAehC,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid palevioletred;\r\n  color: palevioletred;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PostsHeader = styled.h2`  \r\n  margin: 0 1em;\r\n  padding: 1.5em;\r\n  font-weight: bold;\r\n  font-size: 30px;  \r\n`;\r\n\r\nconst ListItem = styled.li` \r\n  width: 50%; \r\n  padding: 1em 1.5em; \r\n  margin: 0.4em;\r\n  background-color: #F8E0EC;\r\n  list-style: none;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst BodyContent = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  background-color: #eee;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst CommentsHeader = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments',\r\n      { body: value, postId: props.post.id });\r\n    setValue('');\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PostsHeader>{props.post.title}</PostsHeader>\r\n      <BodyContent>{props.post.body}</BodyContent>\r\n      {props.comments && (\r\n        <>\r\n          <CommentsHeader>Comments:</CommentsHeader>\r\n          <ul>\r\n            {props.comments.map(comment => \r\n              {comment.body.trim().length > 0 ? (<ListItem key={comment.id}>\r\n                {comment.body}\r\n              </ListItem>) : ''}\r\n              )}\r\n          </ul>\r\n        </>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <Button type=\"submit\">Add comment</Button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = getPost.data;\r\n  const currentComments = getComments.data.filter(comment => comment.postId === Number(id));\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      postId: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}