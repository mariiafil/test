{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Layout from '../../components/MyLayout';\nconst Button = styled.button.withConfig({\n  displayName: \"id__Button\",\n  componentId: \"h0mp0v-0\"\n})([\"width:200px;height:60px;font-size:18px;background:transparent;border-radius:3px;border:2px solid palevioletred;color:palevioletred;margin:0 1em;padding:0.25em 1em;cursor:pointer;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"id__Input\",\n  componentId: \"h0mp0v-1\"\n})([\"width:300px;height:40px;padding:0 10px;margin-left:6em;border-radius:5px;border:1px solid grey;outline:none;\"]);\nconst PostsHeader = styled.h2.withConfig({\n  displayName: \"id__PostsHeader\",\n  componentId: \"h0mp0v-2\"\n})([\"   margin:0 1em;padding:1.5em;font-weight:bold;font-size:30px;\"]);\nconst ListItem = styled.li.withConfig({\n  displayName: \"id__ListItem\",\n  componentId: \"h0mp0v-3\"\n})([\"  width:50%;padding:1em 1.5em;margin:0.4em;background-color:#F8E0EC;list-style:none;border-radius:7px;\"]);\nconst BodyContent = styled.div.withConfig({\n  displayName: \"id__BodyContent\",\n  componentId: \"h0mp0v-4\"\n})([\"  margin-left:2em;padding:2em 3em;width:80%;font-size:18px;background-color:#eee;border-radius:10px;\"]);\nconst CommentsHeader = styled.div.withConfig({\n  displayName: \"id__CommentsHeader\",\n  componentId: \"h0mp0v-5\"\n})([\"  margin-left:2em;padding:2em 3em;width:80%;font-size:18px;font-weight:bold;\"]);\n\nconst Post = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    post,\n    comments\n  } = props;\n  const {\n    0: allComments,\n    1: setAllComments\n  } = useState(comments);\n\n  const handleChange = e => {\n    setValue(e.currentTarget.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await axios.post('https://simple-blog-api.crew.red/comments', {\n      body: value,\n      postId: post.id\n    });\n    setValue('');\n    setAllComments([...allComments, {\n      body: value,\n      postId: post.id,\n      id: 2\n    }]);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, post.title), __jsx(BodyContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, post.body), allComments && __jsx(React.Fragment, null, __jsx(CommentsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Comments:\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, allComments.map(comment => __jsx(ListItem, {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, comment.body)))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const post = postFromServer.data;\n  const currentComments = commentsFromServer.data.filter(comment => comment.postId === Number(id));\n  return {\n    post,\n    comments: currentComments\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].tsx"],"names":["React","useState","axios","styled","Layout","Button","button","Input","input","PostsHeader","h2","ListItem","li","BodyContent","div","CommentsHeader","Post","props","value","setValue","post","comments","allComments","setAllComments","handleChange","e","currentTarget","handleSubmit","event","preventDefault","body","postId","id","title","map","comment","getInitialProps","context","query","postFromServer","get","commentsFromServer","data","currentComments","filter","Number"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/MyLayout';\r\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  height: 60px;\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid palevioletred;\r\n  color: palevioletred;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 300px;\r\n  height: 40px;\r\n  padding: 0 10px;\r\n  margin-left: 6em;\r\n  border-radius: 5px;\r\n  border: 1px solid grey;\r\n  outline: none;\r\n`\r\n\r\nconst PostsHeader = styled.h2`  \r\n  margin: 0 1em;\r\n  padding: 1.5em;\r\n  font-weight: bold;\r\n  font-size: 30px;  \r\n`;\r\n\r\nconst ListItem = styled.li` \r\n  width: 50%; \r\n  padding: 1em 1.5em; \r\n  margin: 0.4em;\r\n  background-color: #F8E0EC;\r\n  list-style: none;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst BodyContent = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  background-color: #eee;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst CommentsHeader = styled.div` \r\n  margin-left: 2em;\r\n  padding: 2em 3em;\r\n  width: 80%; \r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\ninterface Props {\r\n  post: Post;\r\n  comments?: Comment[];\r\n}\r\n\r\nconst Post: NextPage<Props> = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { post, comments } = props;\r\n  const [allComments, setAllComments] = useState(comments);\r\n\r\n  const handleChange = (e: FormEvent<HTMLInputElement>) => {\r\n    setValue(e.currentTarget.value);\r\n  }\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    event.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments',\r\n      { body: value, postId: post.id });\r\n    setValue('');\r\n    setAllComments([...allComments, {body: value, postId: post.id, id: 2}]);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PostsHeader>{post.title}</PostsHeader>\r\n      <BodyContent>{post.body}</BodyContent>\r\n      {allComments && (\r\n        <>\r\n          <CommentsHeader>Comments:</CommentsHeader>\r\n          <ul>\r\n            {allComments.map(comment => \r\n              <ListItem key={comment.id}>\r\n                {comment.body}\r\n              </ListItem>)}\r\n          </ul>\r\n        </>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <Input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <Button type=\"submit\">Add comment</Button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context: NextPageContext) {\r\n  const { id } = context.query;\r\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = postFromServer.data;\r\n  const currentComments = commentsFromServer.data.filter(comment => comment.postId === Number(id));\r\n  return { post, comments: currentComments };\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}