{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport nextConnectRedux from 'next-connect-redux';\nimport ReduxThunk from 'redux-thunk';\n\nconst axios = require('axios');\n\nexport const actionTypes = {\n  FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS'\n};\nexport const fetchPostsSuccess = posts => ({\n  type: actionTypes.FETCH_POSTS_SUCCESS,\n  posts\n});\nexport const fetchPosts = () => dispatch => {\n  axios.get('https://simple-blog-api.crew.red/posts').then(response => {\n    dispatch(fetchPostsSuccess(response.data));\n  });\n};\nconst initialPosts = {\n  posts: [{\n    id: 90,\n    title: 'iioi',\n    body: 'lkjlkj'\n  }]\n};\n\nconst reducer = (state = initialPosts, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_POSTS_SUCCESS:\n      return {\n        posts: action.posts\n      };\n\n    case actionTypes.FETCH_POSTS_ERROR:\n      return {\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = () => {\n  return createStore(reducer, initialPosts, applyMiddleware(ReduxThunk));\n};\nexport const nextConnect = nextConnectRedux(store);","map":{"version":3,"sources":["C:/react/test_task/redux/store.js"],"names":["createStore","applyMiddleware","nextConnectRedux","ReduxThunk","axios","require","actionTypes","FETCH_POSTS_SUCCESS","fetchPostsSuccess","posts","type","fetchPosts","dispatch","get","then","response","data","initialPosts","id","title","body","reducer","state","action","FETCH_POSTS_ERROR","error","store","nextConnect"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,mBAAmB,EAAE;AADI,CAApB;AAIP,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,KAAK;AACzCC,EAAAA,IAAI,EAAEJ,WAAW,CAACC,mBADuB;AAEzCE,EAAAA;AAFyC,CAAL,CAA/B;AAKP,OAAO,MAAME,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1CR,EAAAA,KAAK,CAACS,GAAN,CAAU,wCAAV,EAAoDC,IAApD,CAAyDC,QAAQ,IAAI;AACnEH,IAAAA,QAAQ,CAACJ,iBAAiB,CAACO,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,MAAMC,YAAY,GAAG;AACnBR,EAAAA,KAAK,EAAE,CAAC;AAACS,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,KAAK,EAAE,MAAhB;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAAD;AADY,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKJ,WAAW,CAACC,mBAAjB;AACE,aAAO;AACLE,QAAAA,KAAK,EAAEc,MAAM,CAACd;AADT,OAAP;;AAGF,SAAKH,WAAW,CAACkB,iBAAjB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEF,MAAM,CAACE;AADT,OAAP;;AAGF;AACE,aAAOH,KAAP;AAVJ;AAYD,CAbD;;AAeA,OAAO,MAAMI,KAAK,GAAG,MAAM;AACzB,SAAO1B,WAAW,CAACqB,OAAD,EAAUJ,YAAV,EAAwBhB,eAAe,CAACE,UAAD,CAAvC,CAAlB;AACD,CAFM;AAIP,OAAO,MAAMwB,WAAW,GAAGzB,gBAAgB,CAACwB,KAAD,CAApC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport nextConnectRedux from 'next-connect-redux'\r\nimport ReduxThunk from 'redux-thunk';\r\nconst axios = require('axios');\r\n\r\nexport const actionTypes = {\r\n  FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\r\n};\r\n\r\nexport const fetchPostsSuccess = posts => ({\r\n  type: actionTypes.FETCH_POSTS_SUCCESS,\r\n  posts,\r\n});\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n  axios.get('https://simple-blog-api.crew.red/posts').then(response => {\r\n    dispatch(fetchPostsSuccess(response.data))\r\n  });\r\n};\r\n\r\nconst initialPosts = {\r\n  posts: [{id: 90, title: 'iioi', body: 'lkjlkj'}],\r\n};\r\n\r\nconst reducer = (state = initialPosts, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_POSTS_SUCCESS:\r\n      return {\r\n        posts: action.posts,\r\n      };\r\n    case actionTypes.FETCH_POSTS_ERROR:\r\n      return {\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const store = () => {\r\n  return createStore(reducer, initialPosts, applyMiddleware(ReduxThunk));\r\n}\r\n\r\nexport const nextConnect = nextConnectRedux(store);"]},"metadata":{},"sourceType":"module"}