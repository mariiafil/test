{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nvar axios = require('axios');\n\nexport var actionTypes = {\n  FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\n  FETCH_POSTS_ERROR: 'FETCH_POSTS_ERROR'\n};\nexport var fetchPostsSuccess = function fetchPostsSuccess(posts) {\n  return {\n    type: actionTypes.FETCH_POSTS_SUCCESS,\n    posts: posts\n  };\n};\nexport var fetchPostsError = function fetchPostsError(error) {\n  return {\n    type: actionTypes.FETCH_POSTS_ERROR,\n    error: error\n  };\n};\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    axios.get('https://simple-blog-api.crew.red/posts').then(function (response) {\n      dispatch(fetchPostsSuccess(response.data))[\"catch\"](function (error) {\n        dispatch(fetchPostsError(error));\n      });\n    });\n  };\n};\nvar initialPosts = {\n  posts: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPosts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_POSTS_SUCCESS:\n      return {\n        posts: action.posts\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport var store = createStore(reducer);","map":{"version":3,"sources":["C:/react/test_task/redux/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","axios","require","actionTypes","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","fetchPostsSuccess","posts","type","fetchPostsError","error","fetchPosts","dispatch","get","then","response","data","initialPosts","reducer","state","action","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,mBAAmB,EAAE,qBADE;AAEvBC,EAAAA,iBAAiB,EAAE;AAFI,CAApB;AAKP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAAY;AACzCC,IAAAA,IAAI,EAAEL,WAAW,CAACC,mBADuB;AAEzCG,IAAAA,KAAK,EAALA;AAFyC,GAAZ;AAAA,CAA1B;AAKP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACvCF,IAAAA,IAAI,EAAEL,WAAW,CAACE,iBADqB;AAEvCK,IAAAA,KAAK,EAALA;AAFuC,GAAZ;AAAA,CAAxB;AAKP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACxCX,IAAAA,KAAK,CACFY,GADH,CACO,wCADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AACdH,MAAAA,QAAQ,CAACN,iBAAiB,CAACS,QAAQ,CAACC,IAAV,CAAlB,CAAR,UACG,UAAAN,KAAK,EAAI;AACZE,QAAAA,QAAQ,CAACH,eAAe,CAACC,KAAD,CAAhB,CAAR;AAAiC,OAFjC;AAGH,KANH;AAOH,GARyB;AAAA,CAAnB;AAWP,IAAMO,YAAY,GAAG;AACnBV,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMW,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKL,WAAW,CAACC,mBAAjB;AACG,aAAO;AACLG,QAAAA,KAAK,EAAEa,MAAM,CAACb;AADT,OAAP;;AAGH;AACE,aAAOY,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,IAAME,KAAK,GAAGvB,WAAW,CAACoB,OAAD,CAAzB","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nconst axios = require('axios');\r\n\r\nexport const actionTypes = {\r\n    FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\r\n    FETCH_POSTS_ERROR: 'FETCH_POSTS_ERROR',\r\n}\r\n\r\nexport const fetchPostsSuccess = (posts) => ({\r\n    type: actionTypes.FETCH_POSTS_SUCCESS,\r\n    posts,\r\n})\r\n\r\nexport const fetchPostsError = (error) => ({\r\n    type: actionTypes.FETCH_POSTS_ERROR,\r\n    error,\r\n})\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n    axios\r\n      .get('https://simple-blog-api.crew.red/posts')\r\n      .then(response => {\r\n          dispatch(fetchPostsSuccess(response.data))\r\n      .catch(error => {\r\n          dispatch(fetchPostsError(error))});\r\n      })\r\n}\r\n    \r\n\r\nconst initialPosts = {\r\n  posts: [],\r\n}\r\n\r\nconst reducer = (state = initialPosts, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_POSTS_SUCCESS:\r\n       return {\r\n         posts: action.posts, \r\n       };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const store = createStore(reducer);\r\n"]},"metadata":{},"sourceType":"module"}