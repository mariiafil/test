{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { fetchPosts } from '../redux/store'; // const axios = require('axios');\n\nvar Index = function Index(props) {\n  useEffect(function () {\n    var dispatch = _this.props.dispatch;\n    posts = fetchPosts(dispatch);\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function (_ref) {\n  var reduxStore = _ref.reduxStore,\n      req = _ref.req;\n  console.log(reduxStore);\n  var isServer = !!req;\n  reduxStore.dispatch(fetchPosts(isServer));\n  return {}; // const res = axios.get('https://simple-blog-api.crew.red/posts');\n  // const data = res.data;\n  // console.log(data);\n  // return {\n  //   posts: [...data],\n  // };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","useEffect","connect","Layout","Link","fetchPosts","Index","props","dispatch","posts","map","post","id","title","getInitialProps","reduxStore","req","console","log","isServer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,gBAA3B,C,CAEA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrBN,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNO,QADM,GACO,KAAI,CAACD,KADZ,CACNC,QADM;AAEdC,IAAAA,KAAK,GAAGJ,UAAU,CAACG,QAAD,CAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADF;AAcD,CAnBD;;AAqBAP,KAAK,CAACQ,eAAN,GAAwB,gBAA8B;AAAA,MAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,MAAPC,GAAO,QAAPA,GAAO;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,MAAMI,QAAQ,GAAG,CAAC,CAACH,GAAnB;AACAD,EAAAA,UAAU,CAACP,QAAX,CAAoBH,UAAU,CAACc,QAAD,CAA9B;AAEA,SAAO,EAAP,CALoD,CAMpD;AACA;AACA;AACA;AACA;AACA;AACD,CAZD;;AAcA,eAAeb,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport { fetchPosts } from '../redux/store';\r\n\r\n// const axios = require('axios');\r\n\r\nconst Index = props => {\r\n  useEffect(() => {\r\n    const { dispatch } = this.props;\r\n    posts = fetchPosts(dispatch);\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {props.posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = function({ reduxStore, req }) {\r\n  console.log(reduxStore);\r\n  const isServer = !!req;\r\n  reduxStore.dispatch(fetchPosts(isServer));\r\n\r\n  return {};\r\n  // const res = axios.get('https://simple-blog-api.crew.red/posts');\r\n  // const data = res.data;\r\n  // console.log(data);\r\n  // return {\r\n  //   posts: [...data],\r\n  // };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}