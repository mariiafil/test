{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }) : null);\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          post = _context.sent;\n          console.log(\"Fetched show: \".concat(post.title));\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["Layout","fetch","Post","props","post","title","show","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGGL,KAAK,CAACG,IAAN,CAAWG,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACG,IAAN,CAAWG,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAH9D,CADgB;AAAA,CAAlB;;AAQAR,IAAI,CAACS,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHZ,KAAK,kDAA2CY,EAA3C,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfZ,UAAAA,IAHe;AAKrBa,UAAAA,OAAO,CAACC,GAAR,yBAA6Bd,IAAI,CAACC,KAAlC;AALqB,2CAOd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Post = props => (\r\n  <Layout>\r\n    <h1>{props.post.title}</h1>\r\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n    {props.show.image ? <img src={props.show.image.medium} /> : null}\r\n  </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const post = await res.json();\r\n\r\n  console.log(`Fetched show: ${post.title}`);\r\n\r\n  return { post };\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}