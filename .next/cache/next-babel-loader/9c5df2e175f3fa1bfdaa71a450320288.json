{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  console.log(props);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('https://simple-blog-api.crew.red/comments', {\n      body: value,\n      postId: props.post.id\n    });\n    setValue('');\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.post.body), props.comments && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, comment.body))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"comment\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add comment\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  console.log(id, 'seFewf');\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\n  const post = getPost.data;\n  const currentComments = getComments.data.filter(comment => comment.postId === id);\n  return {\n    post,\n    comments: currentComments\n  };\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }),\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","useState","PropTypes","Layout","axios","Post","props","value","setValue","console","log","handleChange","e","target","handleSubmit","preventDefault","post","body","postId","id","title","comments","map","comment","getInitialProps","context","query","getPost","get","getComments","data","currentComments","filter","propTypes","shape","number","isRequired","string","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => {\r\n  const [value, setValue] = useState('');\r\n  console.log(props);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('https://simple-blog-api.crew.red/comments', { body: value, postId: props.post.id });\r\n    setValue('');\r\n  }\r\n  return (\r\n    <Layout>\r\n      <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p>\r\n      {props.comments && (\r\n        <ul>\r\n          {props.comments.map(comment => \r\n            <li key={comment.id}>\r\n              {comment.body}\r\n            </li>)}\r\n        </ul>)}\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n                    placeholder=\"comment\"\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n            <button type=\"submit\">Add comment</button>\r\n        </form>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  console.log(id, 'seFewf');\r\n  const getPost = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const getComments = await axios.get('https://simple-blog-api.crew.red/comments');\r\n  \r\n  const post = getPost.data;\r\n  const currentComments = getComments.data.filter(comment => comment.postId === id);\r\n  \r\n  return { post, comments: currentComments };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      body: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}