{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { fetchPosts } from '../redux/store'; // const axios = require('axios');\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// const { dispatch } = this.props;\n      // this.post = fetchPosts(dispatch);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Latest posts\"), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.posts.map(function (post) {\n        return __jsx(\"li\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/posts/[id]\",\n          as: \"/posts/\".concat(post.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, post.title)));\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req; // reduxStore.dispatch(fetchPosts(isServer));\n\n      return {};\n    }\n  }]);\n\n  return Index;\n}(React.Component); // const Index = props => (\n//   <Layout>\n//     <h2>Latest posts</h2>\n//     <ul>\n//       {props.posts.map(post => (\n//         <li key={post.id}>\n//           <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//             <a>{post.title}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = function({ reduxStore, req }) {\n//   const isServer = !!req;\n//   reduxStore.dispatch(fetchPosts(isServer));\n//   return {};\n// const res = axios.get('https://simple-blog-api.crew.red/posts');\n// const data = res.data;\n// console.log(data);\n// return {\n//   posts: [...data],\n// };\n// };\n\n\nexport default connect()(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","connect","Layout","Link","fetchPosts","Index","props","posts","map","post","id","title","reduxStore","req","isServer","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,gBAA3B,C,CAEA;;IAEMC,K;;;;;;;;;;;wCAQgB,CAClB;AACA;AACD;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,KAAT,CADF,CADF,CADwB;AAAA,OAAzB,CADH,CAFF,CADF;AAcD;;;0CA3B2C;AAAA,UAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC1C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB,CAD0C,CAE1C;;AAEA,aAAO,EAAP;AACD;;;;EANiBb,KAAK,CAACe,S,GA+B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,OAAO,GAAGI,KAAH,CAAtB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport { fetchPosts } from '../redux/store';\r\n\r\n// const axios = require('axios');\r\n\r\nclass Index extends React.Component {\r\n  static getInitialProps({ reduxStore, req }) {\r\n    const isServer = !!req;\r\n    // reduxStore.dispatch(fetchPosts(isServer));\r\n\r\n    return {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const { dispatch } = this.props;\r\n    // this.post = fetchPosts(dispatch);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Latest posts</h2>\r\n        <ul>\r\n          {this.props.posts.map(post => (\r\n            <li key={post.id}>\r\n              <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n                <a>{post.title}</a>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// const Index = props => (\r\n//   <Layout>\r\n//     <h2>Latest posts</h2>\r\n//     <ul>\r\n//       {props.posts.map(post => (\r\n//         <li key={post.id}>\r\n//           <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n//             <a>{post.title}</a>\r\n//           </Link>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   </Layout>\r\n// );\r\n\r\n// Index.getInitialProps = function({ reduxStore, req }) {\r\n//   const isServer = !!req;\r\n//   reduxStore.dispatch(fetchPosts(isServer));\r\n\r\n//   return {};\r\n// const res = axios.get('https://simple-blog-api.crew.red/posts');\r\n// const data = res.data;\r\n// console.log(data);\r\n// return {\r\n//   posts: [...data],\r\n// };\r\n// };\r\n\r\nexport default connect()(Index);\r\n"]},"metadata":{},"sourceType":"module"}