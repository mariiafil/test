{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Link from 'next/link';\nimport { nextConnect, fetchPosts } from '../redux/store';\nimport Layout from '../components/MyLayout';\nimport { store } from '../redux/store';\n\nconst Index = ({\n  posts\n}) => {\n  useEffect(() => {\n    store().dispatch(fetchPosts());\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, posts.map(post => __jsx(\"li\", {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, post.title))))));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    body: PropTypes.string\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = async function ({\n  store\n}) {\n  await store.dispatch(fetchPosts());\n  return {\n    custom: 'custom'\n  };\n};\n\nexport default nextConnect(state => state)(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","useEffect","PropTypes","shape","Link","nextConnect","fetchPosts","Layout","store","Index","posts","dispatch","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","custom","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3BT,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,GAAGG,QAAR,CAAiBL,UAAU,EAA3B;AACD,GAFQ,CAAT;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASD,IAAI,CAACC,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,KAAT,CADF,CADF,CADD,CADH,CAFF,CADF;AAcD,CAlBD;;AAoBAN,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,KAAK,EAAER,SAAS,CAACe,OAAV,CACLd,KAAK,CAAC;AACJW,IAAAA,EAAE,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAEb,SAAS,CAACkB,MAFb;AAGJC,IAAAA,IAAI,EAAEnB,SAAS,CAACkB;AAHZ,GAAD,CAAL,CAIGD,UALE,EAMLA;AAPc,CAAlB;;AAUAV,KAAK,CAACa,eAAN,GAAyB,gBAAe;AAACd,EAAAA;AAAD,CAAf,EAAwB;AAC9C,QAAMA,KAAK,CAACG,QAAN,CAAeL,UAAU,EAAzB,CAAN;AACA,SAAO;AAACiB,IAAAA,MAAM,EAAE;AAAT,GAAP;AACF,CAHD;;AAKA,eAAelB,WAAW,CAAEmB,KAAD,IAAWA,KAAZ,CAAX,CAA8Bf,KAA9B,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { nextConnect, fetchPosts } from '../redux/store';\r\nimport Layout from '../components/MyLayout';\r\nimport { store } from '../redux/store';\r\n\r\nconst Index = ({ posts }) => {\r\n  useEffect(() => {\r\n    store().dispatch(fetchPosts());\r\n  });\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      body: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps =  async function({store}) {\r\n   await store.dispatch(fetchPosts());\r\n   return {custom: 'custom'}\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}