{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Link from 'next/link';\nimport { nextConnect, fetchPosts } from '../redux/store';\nimport Layout from '../components/MyLayout';\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = function (_ref2) {\n  var store = _ref2.store;\n  store.dispatch(fetchPosts());\n  return {};\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","PropTypes","shape","Link","nextConnect","fetchPosts","Layout","Index","posts","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","store","dispatch","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AAcD,CAfD;;AAiBAL,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAEP,SAAS,CAACa,OAAV,CACLZ,KAAK,CAAC;AACJS,IAAAA,EAAE,EAAEV,SAAS,CAACc,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAEX,SAAS,CAACgB,MAAV,CAAiBD,UAFpB;AAGJE,IAAAA,IAAI,EAAEjB,SAAS,CAACgB,MAAV,CAAiBD;AAHnB,GAAD,CAAL,CAIGA,UALE,EAMLA;AAPc,CAAlB;;AAUAT,KAAK,CAACY,eAAN,GAAyB,iBAAkB;AAAA,MAARC,KAAQ,SAARA,KAAQ;AACxCA,EAAAA,KAAK,CAACC,QAAN,CAAehB,UAAU,EAAzB;AACA,SAAO,EAAP;AACF,CAHD;;AAKA,eAAeD,WAAW,CAAC,UAACkB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8Bf,KAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { nextConnect, fetchPosts } from '../redux/store';\r\nimport Layout from '../components/MyLayout';\r\n\r\nconst Index = ({ posts }) => {\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      body: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps =  function({store}) {\r\n   store.dispatch(fetchPosts());\r\n   return {}\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}