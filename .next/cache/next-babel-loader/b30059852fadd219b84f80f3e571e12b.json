{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { store, nextConnect, fetchPosts } from '../../redux/store';\n\nvar Post = function Post(props) {\n  console.log(props);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(context.store);\n          id = context.query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(store().dispatch(fetchPosts()));\n\n        case 4:\n          return _context.abrupt(\"return\", {});\n\n        case 7:\n          res = _context.sent;\n          post = res.data;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  })\n};\nexport default nextConnect(function (state) {\n  return state;\n})(Post);","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","PropTypes","Layout","axios","store","nextConnect","fetchPosts","Post","props","console","log","getInitialProps","context","id","query","dispatch","res","post","data","propTypes","shape","title","string","isRequired","body","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,UAA5B,QAA6C,mBAA7C;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CARD;;AAWAD,IAAI,CAACI,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACR,KAApB;AACQS,UAAAA,EAFa,GAEND,OAAO,CAACE,KAFF,CAEbD,EAFa;AAAA;AAAA,2CAGfT,KAAK,GAAGW,QAAR,CAAiBT,UAAU,EAA3B,CAHe;;AAAA;AAAA,2CAId,EAJc;;AAAA;AAKfU,UAAAA,GALe;AAMfC,UAAAA,IANe,GAMRD,GAAG,CAACE,IANI;AAAA,2CAQd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWAV,IAAI,CAACY,SAAL,GAAiB;AACfF,EAAAA,IAAI,EAAEhB,SAAS,CAACmB,KAAV,CAAgB;AACpBC,IAAAA,KAAK,EAAEpB,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAEpBC,IAAAA,IAAI,EAAEvB,SAAS,CAACqB,MAAV,CAAiBC;AAFH,GAAhB;AADS,CAAjB;AAOA,eAAelB,WAAW,CAAC,UAACoB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BlB,IAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\nimport {store, nextConnect, fetchPosts} from '../../redux/store';\r\n\r\nconst Post = props => {\r\n  console.log(props);\r\n  return (\r\n    <Layout>\r\n      {/* <h1>{props.post.title}</h1>\r\n      <p>{props.post.body}</p> */}\r\n    </Layout>\r\n  )\r\n} \r\n\r\n\r\nPost.getInitialProps = async function(context) {\r\n  console.log(context.store);\r\n  const { id } = context.query;\r\n  await store().dispatch(fetchPosts());\r\n  return {};\r\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const post = res.data;\r\n\r\n  return { post };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default nextConnect((state) => state)(Post)\r\n"]},"metadata":{},"sourceType":"module"}