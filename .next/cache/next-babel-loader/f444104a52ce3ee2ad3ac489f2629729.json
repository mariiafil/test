{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { nextConnect } from '../redux/store';\nimport { fetchPosts } from '../redux/store';\nimport { useDispatch } from 'react-redux'; // const axios = require('axios');\n\nconst Index = ({\n  posts\n}) => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, posts.map(post => __jsx(\"li\", {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, post.title))))));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = function ({\n  store\n}) {\n  console.log(store);\n  store.dispatch(fetchPosts());\n  return {};\n};\n\nexport default nextConnect(state => state)(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","PropTypes","shape","Layout","Link","connect","nextConnect","fetchPosts","useDispatch","Index","posts","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","store","console","log","dispatch","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASD,IAAI,CAACC,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,KAAT,CADF,CADF,CADD,CADH,CAFF,CADF;AAcD,CAfD;;AAiBAL,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAET,SAAS,CAACe,OAAV,CACLd,KAAK,CAAC;AACJW,IAAAA,EAAE,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAEb,SAAS,CAACkB,MAAV,CAAiBD,UAFpB;AAGJE,IAAAA,IAAI,EAAEnB,SAAS,CAACkB,MAAV,CAAiBD;AAHnB,GAAD,CAAL,CAIGA,UALE,EAMLA;AAPc,CAAlB;;AAUAT,KAAK,CAACY,eAAN,GAAyB,UAAS;AAACC,EAAAA;AAAD,CAAT,EAAkB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACCA,EAAAA,KAAK,CAACG,QAAN,CAAelB,UAAU,EAAzB;AACC,SAAO,EAAP;AACH,CAJD;;AAMA,eAAeD,WAAW,CAAEoB,KAAD,IAAWA,KAAZ,CAAX,CAA8BjB,KAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport { connect } from 'react-redux';\r\nimport { nextConnect } from '../redux/store';\r\nimport { fetchPosts } from '../redux/store';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// const axios = require('axios');\r\n\r\nconst Index = ({ posts }) => {\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      body: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps =  function({store}) {\r\n  console.log(store);\r\n   store.dispatch(fetchPosts());\r\n    return {}\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}