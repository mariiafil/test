{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { nextConnect, fetchPosts } from '../redux/store';\nimport Layout from '../components/MyLayout';\nimport styled from 'styled-components';\n\nvar axios = require('axios');\n\nvar PostsHeader = styled.h2.withConfig({\n  displayName: \"pages__PostsHeader\",\n  componentId: \"sc-14trqcs-0\"\n})([\"   margin:0 1em;padding:1.5em;font-weight:bold;font-size:30px;\"]);\nvar ListItem = styled.li.withConfig({\n  displayName: \"pages__ListItem\",\n  componentId: \"sc-14trqcs-1\"\n})([\"   list-style:none;padding:0.3em 1.5em;\"]);\nvar ListItemLink = styled.a.withConfig({\n  displayName: \"pages__ListItemLink\",\n  componentId: \"sc-14trqcs-2\"\n})([\"   text-decoration:none;font-size:20px;cursor:pointer;\"]);\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  var ss = [];\n\n  var getInitial = function getInitial() {\n    var request, posts;\n    return _regeneratorRuntime.async(function getInitial$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/posts'));\n\n          case 2:\n            request = _context.sent;\n            // console.log(request.data);\n            posts = request.data;\n            return _context.abrupt(\"return\", posts);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(getInitial());\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(ListItem, {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(ListItemLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          store = _ref2.store;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(store.dispatch(fetchPosts()));\n\n        case 3:\n          return _context2.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.tsx"],"names":["React","Link","nextConnect","fetchPosts","Layout","styled","axios","require","PostsHeader","h2","ListItem","li","ListItemLink","a","Index","posts","ss","getInitial","get","request","data","console","log","map","post","id","title","getInitialProps","store","dispatch","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACI,EAAV;AAAA;AAAA;AAAA,sEAAjB;AAOA,IAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAV;AAAA;AAAA;AAAA,+CAAd;AAKA,IAAMC,YAAY,GAAGP,MAAM,CAACQ,CAAV;AAAA;AAAA;AAAA,8DAAlB;;AAUA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAClC,MAAMC,EAAE,GAAG,EAAX;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKX,KAAK,CAACY,GAAN,CAAU,wCAAV,CADL;;AAAA;AACXC,YAAAA,OADW;AAEjB;AACMJ,YAAAA,KAHW,GAGHI,OAAO,CAACC,IAHL;AAAA,6CAKVL,KALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,EAAtB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,WACf,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,CADJ,CADF,CADe;AAAA,GAAd,CAAL,CAFF,CADF;AAcD,CAxBD;;AA0BAZ,KAAK,CAACa,eAAN,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,UAAAA,KAAhB,SAAgBA,KAAhB;AAAA;AAAA,2CACjBA,KAAK,CAACC,QAAN,CAAe1B,UAAU,EAAzB,CADiB;;AAAA;AAAA,4CAEhB,EAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAKA,eAAeD,WAAW,CAAC,UAAC4B,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BhB,KAA9B,CAAf","sourcesContent":["import React, { FC } from 'react';\r\nimport Link from 'next/link';\r\nimport { nextConnect, fetchPosts } from '../redux/store';\r\nimport Layout from '../components/MyLayout';\r\nimport styled from 'styled-components'\r\nconst axios = require('axios');\r\n\r\nconst PostsHeader = styled.h2`  \r\n  margin: 0 1em;\r\n  padding: 1.5em;\r\n  font-weight: bold;\r\n  font-size: 30px;  \r\n`;\r\n\r\nconst ListItem = styled.li`  \r\n  list-style: none;\r\n  padding: 0.3em 1.5em; \r\n`;\r\n\r\nconst ListItemLink = styled.a`  \r\n  text-decoration: none; \r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface Props  {\r\n  posts: Post[];\r\n}\r\n\r\nconst Index = ({ posts }: Props) => {\r\n  const ss = [];\r\n  const getInitial = async () => {\r\n    const request = await axios.get('https://simple-blog-api.crew.red/posts');\r\n    // console.log(request.data);\r\n    const posts = request.data;\r\n    \r\n    return posts;\r\n  }\r\n  console.log(getInitial());\r\n  return (\r\n    <Layout>\r\n      <PostsHeader>Latest posts</PostsHeader>\r\n      <ul>{posts.map(post => (\r\n          <ListItem key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n                <ListItemLink>\r\n                  {post.title}\r\n                </ListItemLink>         \r\n            </Link>\r\n          </ListItem>\r\n        ))}</ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.getInitialProps =  async function({store}) {\r\n  await store.dispatch(fetchPosts());\r\n  return {};\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}