{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Link from 'next/link';\nimport { nextConnect, fetchPosts } from '../redux/store';\nimport Layout from '../components/MyLayout';\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  useEffect(function () {\n    store.dispatch(fetchPosts());\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    body: PropTypes.string\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(store.dispatch(fetchPosts()));\n\n        case 3:\n          return _context.abrupt(\"return\", {\n            custom: 'custom'\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","useEffect","PropTypes","shape","Link","nextConnect","fetchPosts","Layout","Index","posts","store","dispatch","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","custom","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3BR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,KAAK,CAACC,QAAN,CAAeL,UAAU,EAAzB;AACD,GAFQ,CAAT;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AAcD,CAlBD;;AAoBAP,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAEP,SAAS,CAACe,OAAV,CACLd,KAAK,CAAC;AACJW,IAAAA,EAAE,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAEb,SAAS,CAACkB,MAFb;AAGJC,IAAAA,IAAI,EAAEnB,SAAS,CAACkB;AAHZ,GAAD,CAAL,CAIGD,UALE,EAMLA;AAPc,CAAlB;;AAUAX,KAAK,CAACc,eAAN,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBZ,UAAAA,KAAhB,SAAgBA,KAAhB;AAAA;AAAA,2CAChBA,KAAK,CAACC,QAAN,CAAeL,UAAU,EAAzB,CADgB;;AAAA;AAAA,2CAEf;AAACiB,YAAAA,MAAM,EAAE;AAAT,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAKA,eAAelB,WAAW,CAAC,UAACmB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BhB,KAA9B,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { nextConnect, fetchPosts } from '../redux/store';\r\nimport Layout from '../components/MyLayout';\r\n\r\nconst Index = ({ posts }) => {\r\n  useEffect(() => {\r\n    store.dispatch(fetchPosts());\r\n  });\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      body: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps =  async function({store}) {\r\n   await store.dispatch(fetchPosts());\r\n   return {custom: 'custom'}\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}