{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Link from 'next/link';\nimport { nextConnect, fetchPosts } from '../redux/store';\nimport Layout from '../components/MyLayout';\nimport styled from 'styled-components';\nconst PostsHeader = styled.h2`  \n  margin: 0 1em;\n  padding: 1.5em;\n  font-weight: bold;\n  font-size: 30px;  \n`;\nconst ListItem = styled.li`  \n  list-style: none;\n  padding: 10px; \n`;\n\nconst Index = ({\n  posts\n}) => {\n  console.log(posts);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, posts.map(post => __jsx(ListItem, {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, post.title))))));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    body: PropTypes.string\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = async function ({\n  store\n}) {\n  await store.dispatch(fetchPosts());\n  return {};\n};\n\nexport default nextConnect(state => state)(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","PropTypes","shape","Link","nextConnect","fetchPosts","Layout","styled","PostsHeader","h2","ListItem","li","Index","posts","console","log","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","store","dispatch","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,EAAG;;;;;CAA9B;AAOA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,EAAG;;;CAA3B;;AAMA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,GAAN,CAAUC,IAAI,IACf,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASD,IAAI,CAACC,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,KAAT,CADF,CADF,CADC,CAAL,CAFF,CADF;AAYD,CAdD;;AAgBAP,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAEZ,SAAS,CAACoB,OAAV,CACLnB,KAAK,CAAC;AACJgB,IAAAA,EAAE,EAAEjB,SAAS,CAACqB,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAElB,SAAS,CAACuB,MAFb;AAGJC,IAAAA,IAAI,EAAExB,SAAS,CAACuB;AAHZ,GAAD,CAAL,CAIGD,UALE,EAMLA;AAPc,CAAlB;;AAUAX,KAAK,CAACc,eAAN,GAAyB,gBAAe;AAACC,EAAAA;AAAD,CAAf,EAAwB;AAC/C,QAAMA,KAAK,CAACC,QAAN,CAAevB,UAAU,EAAzB,CAAN;AACA,SAAO,EAAP;AACD,CAHD;;AAKA,eAAeD,WAAW,CAAEyB,KAAD,IAAWA,KAAZ,CAAX,CAA8BjB,KAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { nextConnect, fetchPosts } from '../redux/store';\r\nimport Layout from '../components/MyLayout';\r\nimport styled from 'styled-components'\r\n\r\nconst PostsHeader = styled.h2`  \r\n  margin: 0 1em;\r\n  padding: 1.5em;\r\n  font-weight: bold;\r\n  font-size: 30px;  \r\n`;\r\n\r\nconst ListItem = styled.li`  \r\n  list-style: none;\r\n  padding: 10px; \r\n`;\r\n\r\n\r\nconst Index = ({ posts }) => {\r\n  console.log(posts);\r\n  return (\r\n    <Layout>\r\n      <PostsHeader>Latest posts</PostsHeader>\r\n      <ul>{posts.map(post => (\r\n          <ListItem key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </ListItem>\r\n        ))}</ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      body: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps =  async function({store}) {\r\n  await store.dispatch(fetchPosts());\r\n  return {};\r\n};\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}