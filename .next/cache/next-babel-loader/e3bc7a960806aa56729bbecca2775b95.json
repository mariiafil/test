{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst axios = require('axios');\n\nexport const actionTypes = {\n  FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\n  FETCH_POSTS_ERROR: 'FETCH_POSTS_ERROR'\n};\nexport const fetchPostsSuccess = posts => ({\n  type: actionTypes.FETCH_POSTS_SUCCESS,\n  posts\n});\nexport const fetchPostsError = error => ({\n  type: actionTypes.FETCH_POSTS_ERROR,\n  error\n});\nexport const fetchPosts = () => dispatch => {\n  axios.get('https://simple-blog-api.crew.red/posts').then(response => {\n    dispatch(fetchPostsSuccess(response.data)).catch(error => {\n      dispatch(fetchPostsError(error));\n    });\n  });\n};\nconst initialPosts = {\n  posts: []\n};\n\nconst reducer = (state = initialPosts, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_POSTS_SUCCESS:\n      return {\n        posts: action.posts\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);","map":{"version":3,"sources":["C:/react/test_task/redux/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","axios","require","actionTypes","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","fetchPostsSuccess","posts","type","fetchPostsError","error","fetchPosts","dispatch","get","then","response","data","catch","initialPosts","reducer","state","action","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,mBAAmB,EAAE,qBADE;AAEvBC,EAAAA,iBAAiB,EAAE;AAFI,CAApB;AAKP,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,KAAY;AACzCC,EAAAA,IAAI,EAAEL,WAAW,CAACC,mBADuB;AAEzCG,EAAAA;AAFyC,CAAZ,CAA1B;AAKP,OAAO,MAAME,eAAe,GAAIC,KAAD,KAAY;AACvCF,EAAAA,IAAI,EAAEL,WAAW,CAACE,iBADqB;AAEvCK,EAAAA;AAFuC,CAAZ,CAAxB;AAKP,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AACxCX,EAAAA,KAAK,CACFY,GADH,CACO,wCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAACN,iBAAiB,CAACS,QAAQ,CAACC,IAAV,CAAlB,CAAR,CACHC,KADG,CACGP,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACH,eAAe,CAACC,KAAD,CAAhB,CAAR;AAAiC,KAFjC;AAGH,GANH;AAOH,CARM;AAWP,MAAMQ,YAAY,GAAG;AACnBX,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKL,WAAW,CAACC,mBAAjB;AACG,aAAO;AACLG,QAAAA,KAAK,EAAEc,MAAM,CAACd;AADT,OAAP;;AAGH;AACE,aAAOa,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAME,KAAK,GAAGxB,WAAW,CAACqB,OAAD,CAAzB","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nconst axios = require('axios');\r\n\r\nexport const actionTypes = {\r\n    FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\r\n    FETCH_POSTS_ERROR: 'FETCH_POSTS_ERROR',\r\n}\r\n\r\nexport const fetchPostsSuccess = (posts) => ({\r\n    type: actionTypes.FETCH_POSTS_SUCCESS,\r\n    posts,\r\n})\r\n\r\nexport const fetchPostsError = (error) => ({\r\n    type: actionTypes.FETCH_POSTS_ERROR,\r\n    error,\r\n})\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n    axios\r\n      .get('https://simple-blog-api.crew.red/posts')\r\n      .then(response => {\r\n          dispatch(fetchPostsSuccess(response.data))\r\n      .catch(error => {\r\n          dispatch(fetchPostsError(error))});\r\n      })\r\n}\r\n    \r\n\r\nconst initialPosts = {\r\n  posts: [],\r\n}\r\n\r\nconst reducer = (state = initialPosts, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_POSTS_SUCCESS:\r\n       return {\r\n         posts: action.posts, \r\n       };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const store = createStore(reducer);\r\n"]},"metadata":{},"sourceType":"module"}