{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { nextConnect } from '../redux/store';\nimport { fetchPosts } from '../redux/store';\nimport { useDispatch } from 'react-redux';\n\nvar axios = require('axios');\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.propTypes = {\n  posts: PropTypes.arrayOf(shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store;\n          console.log(store);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(store.dispatch(fetchPosts()));\n\n        case 4:\n          return _context.abrupt(\"return\", {});\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(state) {\n  return {\n    posts: state.posts\n  };\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["C:/react/test_task/pages/index.js"],"names":["React","PropTypes","shape","Layout","Link","connect","nextConnect","fetchPosts","useDispatch","axios","require","Index","posts","map","post","id","title","propTypes","arrayOf","number","isRequired","string","body","getInitialProps","store","console","log","dispatch","mapDispatchToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AAcD,CAfD;;AAiBAL,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAEX,SAAS,CAACiB,OAAV,CACLhB,KAAK,CAAC;AACJa,IAAAA,EAAE,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADjB;AAEJJ,IAAAA,KAAK,EAAEf,SAAS,CAACoB,MAAV,CAAiBD,UAFpB;AAGJE,IAAAA,IAAI,EAAErB,SAAS,CAACoB,MAAV,CAAiBD;AAHnB,GAAD,CAAL,CAIGA,UALE,EAMLA;AAPc,CAAlB;;AAUAT,KAAK,CAACY,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,UAAAA,KAAhB,SAAgBA,KAAhB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADsB;AAAA,2CAEhBA,KAAK,CAACG,QAAN,CAAepB,UAAU,EAAzB,CAFgB;;AAAA;AAAA,2CAGb,EAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAYA,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,SAAO;AACLjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeN,WAAW,CAAC,UAACuB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BlB,KAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes, { shape } from 'prop-types';\r\nimport Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport { connect } from 'react-redux';\r\nimport { nextConnect } from '../redux/store';\r\nimport { fetchPosts } from '../redux/store';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst axios = require('axios');\r\n\r\nconst Index = ({ posts }) => {\r\n  return (\r\n    <Layout>\r\n      <h2>Latest posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n} \r\n\r\nIndex.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      body: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nIndex.getInitialProps = async function({store}) {\r\n  console.log(store);\r\n  await store.dispatch(fetchPosts());\r\n    return {}\r\n  // const res = await axios.get('https://simple-blog-api.crew.red/posts');\r\n  // const data = res.data;\r\n  // console.log(data);\r\n  // return {\r\n  //   posts: [...data],\r\n  // };\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n  return {\r\n    posts: state.posts,\r\n  }\r\n}\r\n\r\nexport default nextConnect((state) => state)(Index)\r\n"]},"metadata":{},"sourceType":"module"}