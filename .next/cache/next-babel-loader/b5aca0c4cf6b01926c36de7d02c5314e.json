{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\react\\\\test_task\\\\pages\\\\posts\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { store, fetchPostsWithId } from '../../redux/store';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.post.body));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(store);\n          id = context.query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(store().dispatch(fetchPostsWithId(id)));\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 6:\n          res = _context.sent;\n          post = res.data;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired\n  })\n};\nexport default Post;","map":{"version":3,"sources":["C:/react/test_task/pages/posts/[id].js"],"names":["React","PropTypes","Layout","axios","store","fetchPostsWithId","Post","props","post","title","body","getInitialProps","context","console","log","id","query","dispatch","get","res","data","propTypes","shape","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,gBAAf,QAAsC,mBAAtC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,IAAf,CAFF,CADgB;AAAA,CAAlB;;AAOAJ,IAAI,CAACK,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACQW,UAAAA,EAFa,GAENH,OAAO,CAACI,KAFF,CAEbD,EAFa;AAAA;AAAA,2CAGfX,KAAK,GAAGa,QAAR,CAAiBZ,gBAAgB,CAACU,EAAD,CAAjC,CAHe;;AAAA;AAAA;AAAA,2CAKHZ,KAAK,CAACe,GAAN,kDAAoDH,EAApD,EALG;;AAAA;AAKfI,UAAAA,GALe;AAMfX,UAAAA,IANe,GAMRW,GAAG,CAACC,IANI;AAAA,2CAQd;AAAEZ,YAAAA,IAAI,EAAJA;AAAF,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWAF,IAAI,CAACe,SAAL,GAAiB;AACfb,EAAAA,IAAI,EAAEP,SAAS,CAACqB,KAAV,CAAgB;AACpBb,IAAAA,KAAK,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UADJ;AAEpBd,IAAAA,IAAI,EAAET,SAAS,CAACsB,MAAV,CAAiBC;AAFH,GAAhB;AADS,CAAjB;AAOA,eAAelB,IAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../../components/MyLayout';\r\nimport axios from 'axios';\r\nimport {store, fetchPostsWithId} from '../../redux/store';\r\n\r\nconst Post = props => (\r\n  <Layout>\r\n    <h1>{props.post.title}</h1>\r\n    <p>{props.post.body}</p>\r\n  </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n  console.log(store);\r\n  const { id } = context.query;\r\n  await store().dispatch(fetchPostsWithId(id));\r\n  \r\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\r\n  const post = res.data;\r\n\r\n  return { post };\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}